Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> void_setup void_loop
Rule 2     void_setup -> VOID SETUP LPAREN RPAREN LBRACE serial_begin serial_print RBRACE
Rule 3     serial_begin -> SERIAL DOT BEGIN LPAREN NUMBER RPAREN SEMICOLON
Rule 4     serial_print -> SERIAL DOT PRINT LPAREN STRING RPAREN SEMICOLON
Rule 5     void_loop -> VOID LOOP LPAREN RPAREN LBRACE RBRACE

Terminals, with rules where they appear

BEGIN                : 3
DOT                  : 3 4
LBRACE               : 2 5
LOOP                 : 5
LPAREN               : 2 3 4 5
NUMBER               : 3
PRINT                : 4
RBRACE               : 2 5
RPAREN               : 2 3 4 5
SEMICOLON            : 3 4
SERIAL               : 3 4
SETUP                : 2
STRING               : 4
VOID                 : 2 5
error                : 

Nonterminals, with rules where they appear

program              : 0
serial_begin         : 2
serial_print         : 2
void_loop            : 1
void_setup           : 1

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . void_setup void_loop
    (2) void_setup -> . VOID SETUP LPAREN RPAREN LBRACE serial_begin serial_print RBRACE

    VOID            shift and go to state 3

    program                        shift and go to state 1
    void_setup                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> void_setup . void_loop
    (5) void_loop -> . VOID LOOP LPAREN RPAREN LBRACE RBRACE

    VOID            shift and go to state 5

    void_loop                      shift and go to state 4

state 3

    (2) void_setup -> VOID . SETUP LPAREN RPAREN LBRACE serial_begin serial_print RBRACE

    SETUP           shift and go to state 6


state 4

    (1) program -> void_setup void_loop .

    $end            reduce using rule 1 (program -> void_setup void_loop .)


state 5

    (5) void_loop -> VOID . LOOP LPAREN RPAREN LBRACE RBRACE

    LOOP            shift and go to state 7


state 6

    (2) void_setup -> VOID SETUP . LPAREN RPAREN LBRACE serial_begin serial_print RBRACE

    LPAREN          shift and go to state 8


state 7

    (5) void_loop -> VOID LOOP . LPAREN RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 9


state 8

    (2) void_setup -> VOID SETUP LPAREN . RPAREN LBRACE serial_begin serial_print RBRACE

    RPAREN          shift and go to state 10


state 9

    (5) void_loop -> VOID LOOP LPAREN . RPAREN LBRACE RBRACE

    RPAREN          shift and go to state 11


state 10

    (2) void_setup -> VOID SETUP LPAREN RPAREN . LBRACE serial_begin serial_print RBRACE

    LBRACE          shift and go to state 12


state 11

    (5) void_loop -> VOID LOOP LPAREN RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 13


state 12

    (2) void_setup -> VOID SETUP LPAREN RPAREN LBRACE . serial_begin serial_print RBRACE
    (3) serial_begin -> . SERIAL DOT BEGIN LPAREN NUMBER RPAREN SEMICOLON

    SERIAL          shift and go to state 15

    serial_begin                   shift and go to state 14

state 13

    (5) void_loop -> VOID LOOP LPAREN RPAREN LBRACE . RBRACE

    RBRACE          shift and go to state 16


state 14

    (2) void_setup -> VOID SETUP LPAREN RPAREN LBRACE serial_begin . serial_print RBRACE
    (4) serial_print -> . SERIAL DOT PRINT LPAREN STRING RPAREN SEMICOLON

    SERIAL          shift and go to state 18

    serial_print                   shift and go to state 17

state 15

    (3) serial_begin -> SERIAL . DOT BEGIN LPAREN NUMBER RPAREN SEMICOLON

    DOT             shift and go to state 19


state 16

    (5) void_loop -> VOID LOOP LPAREN RPAREN LBRACE RBRACE .

    $end            reduce using rule 5 (void_loop -> VOID LOOP LPAREN RPAREN LBRACE RBRACE .)


state 17

    (2) void_setup -> VOID SETUP LPAREN RPAREN LBRACE serial_begin serial_print . RBRACE

    RBRACE          shift and go to state 20


state 18

    (4) serial_print -> SERIAL . DOT PRINT LPAREN STRING RPAREN SEMICOLON

    DOT             shift and go to state 21


state 19

    (3) serial_begin -> SERIAL DOT . BEGIN LPAREN NUMBER RPAREN SEMICOLON

    BEGIN           shift and go to state 22


state 20

    (2) void_setup -> VOID SETUP LPAREN RPAREN LBRACE serial_begin serial_print RBRACE .

    VOID            reduce using rule 2 (void_setup -> VOID SETUP LPAREN RPAREN LBRACE serial_begin serial_print RBRACE .)


state 21

    (4) serial_print -> SERIAL DOT . PRINT LPAREN STRING RPAREN SEMICOLON

    PRINT           shift and go to state 23


state 22

    (3) serial_begin -> SERIAL DOT BEGIN . LPAREN NUMBER RPAREN SEMICOLON

    LPAREN          shift and go to state 24


state 23

    (4) serial_print -> SERIAL DOT PRINT . LPAREN STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 25


state 24

    (3) serial_begin -> SERIAL DOT BEGIN LPAREN . NUMBER RPAREN SEMICOLON

    NUMBER          shift and go to state 26


state 25

    (4) serial_print -> SERIAL DOT PRINT LPAREN . STRING RPAREN SEMICOLON

    STRING          shift and go to state 27


state 26

    (3) serial_begin -> SERIAL DOT BEGIN LPAREN NUMBER . RPAREN SEMICOLON

    RPAREN          shift and go to state 28


state 27

    (4) serial_print -> SERIAL DOT PRINT LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 29


state 28

    (3) serial_begin -> SERIAL DOT BEGIN LPAREN NUMBER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 30


state 29

    (4) serial_print -> SERIAL DOT PRINT LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 31


state 30

    (3) serial_begin -> SERIAL DOT BEGIN LPAREN NUMBER RPAREN SEMICOLON .

    SERIAL          reduce using rule 3 (serial_begin -> SERIAL DOT BEGIN LPAREN NUMBER RPAREN SEMICOLON .)


state 31

    (4) serial_print -> SERIAL DOT PRINT LPAREN STRING RPAREN SEMICOLON .

    RBRACE          reduce using rule 4 (serial_print -> SERIAL DOT PRINT LPAREN STRING RPAREN SEMICOLON .)

